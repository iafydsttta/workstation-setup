---
- name: Workstation Setup
  hosts: localhost
  connection: local
  become: false

  pre_tasks:
    - name: Check if Password is correct
      become: true
      block:
        - name: Check Password
          command: echo "PW is correct"
          changed_when: false
          register: password_check
          timeout: 2
      rescue:
        - name: Password Alert
          ansible.builtin.fail:
            msg: Password timeout. Correct password?

  tasks:
    - name: Check if .local/bin is in PATH
      command: "grep '.local/bin' /home/{{ ansible_user_id }}/.bashrc"
      register: checkbashrc
      check_mode: false
      ignore_errors: true
      changed_when: false

    - name: Add to path if not present
      lineinfile:
        path: "/home/{{ ansible_user_id }}/.bashrc"
        line: "export PATH=$PATH:/home/{{ ansible_user_id }}/.local/bin"
      when: checkbashrc.rc == 1

    - name: .local/bin/ to Path in .zshrc
      lineinfile:
        path: "/home/{{ ansible_user_id }}/.zshrc"
        line: "export PATH=$PATH:/home/{{ ansible_user_id }}/.local/bin"
        insertbefore: "BOF"

    - name: "Install system packages"
      become: true
      apt:
        name:
          - apt-transport-https
          - aptitude
          - fd-find
          - locate
          - neofetch
          - npm
          - shutter
          - tmux
          - tree
          - zsh
        state: latest
        update_cache: true
      when: ansible_facts['distribution'] == "Ubuntu"

    - name: Prepare VSCode dependencies
      become: true
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: latest

    - name: Add microsoft apt key
      become: true
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present
    - name: Add VS Code apt repostitory
      become: true
      apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
        state: present
        filename: vscode
    - name: Install VS Code
      become: true
      apt:
        name: code
        state: present

    - name: Include zsh role
      include_role:
        name: zsh
      when: install_zsh | default(true)

    - name: "Symlink fdfind to fd"
      become: true
      file:
        src: /usr/bin/fdfind
        path: /usr/bin/fd
        state: link

    # For installing logseq and other AppImage applications
    - name: Install AppImageLauncher via PPA
      become: true
      apt_repository:
        repo: "ppa:appimagelauncher-team/stable"
        state: present
      notify: Update apt cache

    - name: Update apt cache
      become: true
      apt:
        update_cache: true

    - name: Install AppImageLauncher
      become: true
      apt:
        name: appimagelauncher
        state: present

    - name: Include tmux role
      include_role:
        name: tmux
      when: install_tmux | default(true)

    - name: Include fzf role
      include_role:
        name: fzf
      when: install_fzf | default(true)

    - name: Include zoxide role
      include_role:
        name: zoxide
      when: install_zoxide | default(true)

    - name: Include neovim role
      include_role:
        name: neovim
      when: install_neovim | default(true)

    - name: Include helix role
      include_role:
        name: helix
      when: install_helix | default(true)

    - name: Include python role
      include_role:
        name: python
      when: install_python | default(true)

    - name: Include cli_tools role
      include_role:
        name: cli_tools
      when: install_cli_tools | default(true)

    - name: Include gui_apps role
      include_role:
        name: gui_apps
      when: install_gui_apps | default(true)
