---
- hosts: localhost
  connection: local
  become: no
  tasks:

    - name: Check if .local/bin is in PATH
      command: "grep '.local/bin' /home/{{ ansible_user_id }}/.bashrc"
      register: checkbashrc
      check_mode: no
      ignore_errors: yes
      changed_when: no
    
    - name: Add to path if not present
      lineinfile:
        path: "/home/{{ ansible_user_id }}/.bashrc"
        line: "export PATH=$PATH:/home/{{ ansible_user_id }}/.local/bin"
      when: checkbashrc.rc == 1
    
    - name: "Install system packages"
      become: yes
      apt:
        name:
        - aptitude
        - tree
        - locate
        - fd-find
        - neofetch
        - tmux
        - zsh
        - apt-transport-https
        state: latest
        update_cache: true
      when: ansible_facts['distribution'] == "Ubuntu"
    
    - name: Prepare VSCode dependencies
      become: true
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
    - name: Add microsoft apt key
      become: true
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present
    - name: Add VS Code apt repostitory
      become: true
      apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
        state: present
        filename: vscode
    - name: Install VS Code
      become: true
      apt:
        name: code
        state: present
    
    - name: Install Oh-My-Zsh
      get_url:
        url: "https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"
        dest: /tmp/install.sh
        mode: 0755
      become: yes
      tags: oh-my-zsh
    
    - name: Check if .oh-my-zsh directory exists
      stat:
        path: /home/yannik/.oh-my-zsh
      register: oh_my_zsh_dir
    
    - name: Install Oh-My-Zsh
      shell: "/tmp/install.sh --unattended"
      tags: oh-my-zsh
      when: oh_my_zsh_dir.stat.exists == false
    
    - name: Clone Pure repo
      git:
        repo: https://github.com/sindresorhus/pure.git
        dest: "{{ ansible_env.HOME }}/.zsh/pure"
    
    - name: Add Pure to fpath
      lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        line: 'fpath+=({{ ansible_env.HOME }}/.zsh/pure)'
    
    - name: Initialize prompt
      lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        line: |
          autoload -U promptinit; promptinit
          prompt pure
        insertafter: EOF
    
    - name: "Configure vi-keybindings for tmux"
      lineinfile: 
        dest: "/home/{{ ansible_user_id }}/.tmux.conf" 
        line: "set-window-option -g mode-keys vi"
        create: true
    
    - name: "Symlink fdfind to fd"
      become: yes
      file:
        src: /usr/bin/fdfind
        path: /usr/bin/fd
        state: link
    
    - name: "Check fzf"
      stat: 
        path: "/home/{{ ansible_user_id }}/fzf/bin/fzf"        
      register: fzf_installed
    
    - name: "Clone fzf"
      git: 
          repo: "https://github.com/junegunn/fzf.git"
          clone: "yes"
          depth: 1
          dest: "/home/{{ ansible_user_id }}/fzf"
          update: "yes"
      when: not fzf_installed.stat.exists
    
    - name: "Install fzf"
      # Note, if not installed in zsh for some reason repeat $HOME/fzf/install --all manually
      shell: /home/{{ ansible_user_id }}/fzf/install --all
      when: not fzf_installed.stat.exists
    
    - name: Check zoxide
      stat:
        path: /home/yannik/.local/bin/zoxide
      register: zoxide_installed
    
    - block:
      - name: "Download zoxide"
        ansible.builtin.get_url:
          url: https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh
          dest: /tmp/zoxide-install.sh
      - name: "Install zoxide"
        shell: bash /tmp/zoxide-install.sh
      - name: Register zoxide
        lineinfile:
          path: "/home/{{ ansible_user_id }}/.bashrc"
          backup: yes 
          line: eval "$(zoxide init bash)"
      - name: Register zoxide in zsh
        lineinfile:
          path: "/home/{{ ansible_user_id }}/.zshrc"
          backup: yes
          line: eval "$(zoxide init zsh)"
      when: not zoxide_installed.stat.exists
    
    # For installing logseq and other AppImage applications
    - name: Install AppImageLauncher via PPA
      become: yes
      apt_repository:
        repo: "ppa:appimagelauncher-team/stable"
        state: present
      notify: Update apt cache
    
    - name: Update apt cache
      become: yes
      apt:
        update_cache: yes
    
    - name: Install AppImageLauncher
      become: yes
      apt:
        name: appimagelauncher
        state: present

    - name: Include neovim role
      include_role: 
        name: neovim
      when: install_neovim|default(true)


